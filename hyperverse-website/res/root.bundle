{"dfb1d9c49f8e43a99205b9d45a946a39.machine": {"name": "Behavior", "license": "CC0", "created": "2016-10-13T09:51:23.482Z", "deleted": false, "dataModelVersion": 2, "maxLoopDepth": 100, "states": {"e6ca0ab500564b2498f364b60e20bcea.state": {"name": "State 1", "actions": {"91992a83f3324c1095a81a6e1e78e752.action": {"name": "Tween Rotate", "type": "Tween Rotation", "options": {"easing2": "InOut", "easing1": "Elastic", "relative": true, "to": [-5, -2, 0], "time": 10000, "transitions": {"complete": "3fbdc9ad08294f47a24392652a4e69fb.transition"}}, "sortValue": 0, "id": "91992a83f3324c1095a81a6e1e78e752.action"}}, "sortValue": 1, "position": [57, -65], "transitions": {"3fbdc9ad08294f47a24392652a4e69fb.transition": {"key": "complete", "name": "", "targetState": "670ce1b60f994b7980788fa3d8ad06bb.state", "sortValue": 0, "id": "3fbdc9ad08294f47a24392652a4e69fb.transition"}}, "id": "e6ca0ab500564b2498f364b60e20bcea.state"}, "670ce1b60f994b7980788fa3d8ad06bb.state": {"name": "State 1", "actions": {"d043dd14af7743beab87f587de3e7167.action": {"name": "Tween Rotate", "type": "Tween Rotation", "options": {"easing2": "InOut", "easing1": "Elastic", "relative": true, "to": [5, 2, 0], "time": 10000, "transitions": {"complete": "bd6090f4dc2a4a218f90ddfe6155b572.transition"}}, "sortValue": 0, "id": "d043dd14af7743beab87f587de3e7167.action"}}, "sortValue": 0, "position": [-219, -49], "transitions": {"bd6090f4dc2a4a218f90ddfe6155b572.transition": {"key": "complete", "name": "", "targetState": "e6ca0ab500564b2498f364b60e20bcea.state", "sortValue": 0, "id": "bd6090f4dc2a4a218f90ddfe6155b572.transition"}}, "id": "670ce1b60f994b7980788fa3d8ad06bb.state"}}, "asyncMode": false, "modified": "2016-10-13T09:51:23.482Z", "position": [340, 206], "initialState": "670ce1b60f994b7980788fa3d8ad06bb.state", "id": "dfb1d9c49f8e43a99205b9d45a946a39.machine"}, "0e9ce4f182374610a5847d0489305c62.material": {"texturesMapping": {}, "flat": false, "cullState": {"frontFace": "CCW", "enabled": true, "cullFace": "Back"}, "uniforms": {"opacity": {"enabled": false, "value": 1}, "refractivity": {"enabled": false, "value": 0}, "materialAmbient": {"enabled": true, "value": [0.1, 0.1, 0.1, 1]}, "materialSpecular": {"enabled": true, "value": [0.6, 0.6, 0.6, 1]}, "fresnel": {"enabled": true, "value": 0.5}, "vertexColorAmount": {"enabled": true, "value": 1}, "materialSpecularPower": {"enabled": true, "value": 64}, "materialDiffuse": {"enabled": true, "value": [0.8, 0.8, 0.8, 1]}, "reflectivity": {"enabled": true, "value": 0.6}, "materialEmissive": {"enabled": true, "value": [0, 0, 0, 1]}, "discardThreshold": {"enabled": true, "value": 0.1}, "normalMultiplier": {"enabled": true, "value": 1}, "etaRatio": {"enabled": true, "value": -0.5}, "reflectionType": 0, "wrapSettings": {"enabled": true, "value": [0, 0]}}, "name": "Default Material 2", "license": "CC0", "created": "2016-02-22T14:26:02.844Z", "deleted": false, "wireframe": false, "dataModelVersion": 2, "blendState": {"blendEquation": "AddEquation", "blendSrc": "SrcAlphaFactor", "blendDst": "OneMinusSrcAlphaFactor", "blending": "NoBlending"}, "modified": "2016-02-22T14:26:02.844Z", "dualTransparency": false, "depthState": {"write": true, "enabled": true}, "shaderRef": "GOO_ENGINE_SHADERS/uber", "id": "0e9ce4f182374610a5847d0489305c62.material", "renderQueue": -1}, "094cf0c7040d43fab51fd63ea35e40ad.texture": {"wrapS": "Repeat", "minFilter": "Trilinear", "name": "height_ss.png", "license": "CC0", "flipY": true, "deleted": false, "magFilter": "Bilinear", "created": "2016-03-15T12:59:58.194Z", "dataModelVersion": 2, "modified": "2016-03-15T12:59:58.194Z", "matchFileName": "height_ss.png", "repeat": [1, 1], "imageRef": "cabda6ef9c3cbc7557b1569cac54c06eb2fb6cbc.png", "anisotropy": 1, "offset": [0, 0], "generateMipmaps": true, "id": "094cf0c7040d43fab51fd63ea35e40ad.texture", "wrapT": "Repeat"}, "cb45a8bd40ca4bd1987f63aed638815f.entity": {"name": "heightmap", "license": "CC0", "tags": {}, "deleted": false, "created": "2016-03-09T13:02:33.545Z", "dataModelVersion": 2, "modified": "2016-03-09T13:02:33.545Z", "static": false, "components": {"transform": {"rotation": [0, 0, 0], "scale": [1, 1, 1], "translation": [0, 0, 0]}, "script": {"scripts": {"b27aa7887a584b54b51f6a4a1d079bba.scriptinstance": {"id": "b27aa7887a584b54b51f6a4a1d079bba.scriptinstance", "name": "Custom script", "scriptRef": "e9705659628b41e397825ef18a78e5eb.script", "sortValue": 0, "options": {"baseColor": [0, 0, 0], "lineColor": [1, 1, 1], "enabled": true, "texture": {"enabled": true, "textureRef": "094cf0c7040d43fab51fd63ea35e40ad.texture"}, "transparency": false, "lineWidth": 1}}}}}, "hidden": false, "id": "cb45a8bd40ca4bd1987f63aed638815f.entity"}, "b9938525d3534a3e8801dd2a3fd90816.entity": {"name": "Directional 1", "license": "CC0", "tags": {}, "deleted": false, "created": "2015-07-27T15:45:29.198Z", "dataModelVersion": 2, "modified": "2015-07-27T15:45:29.198Z", "static": false, "components": {"light": {"direction": [0, 0, 0], "shadowCaster": false, "color": [1, 1, 1, 1], "intensity": 0.4, "range": 60, "specularIntensity": 1, "penumbra": 5, "angle": 30, "type": "DirectionalLight", "shadowSettings": {"fov": 55, "darkness": 1, "far": 60, "near": 1, "resolution": [256, 256], "shadowType": "Basic", "size": 100}}, "transform": {"rotation": [-31, 129, 0], "scale": [1, 1, 1], "translation": [15, 11.6, -12.2]}}, "hidden": false, "id": "b9938525d3534a3e8801dd2a3fd90816.entity"}, "529ec55492064336b1ab4e873c7c7ab4.entity": {"name": "sky", "license": "CC0", "tags": {}, "deleted": false, "created": "2016-02-24T09:27:23.859Z", "dataModelVersion": 2, "modified": "2016-02-24T09:27:23.859Z", "static": false, "components": {"transform": {"rotation": [0, 0, 0], "scale": [1, 1, 1], "translation": [0, 0, 0]}, "script": {"scripts": {}}}, "hidden": false, "id": "529ec55492064336b1ab4e873c7c7ab4.entity"}, "d48a82754d7b4a7982bdb8355a5c4a2d.material": {"flat": true, "cullState": {"frontFace": "CCW", "enabled": true, "cullFace": "Back"}, "uniforms": {"opacity": {"enabled": false, "value": 1}, "refractivity": {"enabled": false, "value": 0}, "materialAmbient": {"enabled": true, "value": [0.3041666666666667, 1, 0.6981311274509803, 1]}, "materialSpecular": {"enabled": true, "value": [0.6, 0.6, 0.6, 1]}, "fresnel": {"enabled": true, "value": 0.5}, "reflectivity": {"enabled": true, "value": 0.6}, "materialSpecularPower": {"enabled": true, "value": 64}, "materialDiffuse": {"enabled": true, "value": [0.8, 0.8, 0.8, 1]}, "vertexColorAmount": {"enabled": true, "value": 1}, "materialEmissive": {"enabled": true, "value": [0, 0, 0, 1]}, "discardThreshold": {"enabled": true, "value": 0.1}, "normalMultiplier": {"enabled": true, "value": 1}, "etaRatio": {"enabled": true, "value": -0.5}, "reflectionType": 0, "wrapSettings": {"enabled": true, "value": [0, 0]}}, "name": "Default Material 3", "license": "CC0", "created": "2016-02-26T15:46:13.823Z", "deleted": false, "id": "d48a82754d7b4a7982bdb8355a5c4a2d.material", "wireframe": false, "dataModelVersion": 2, "blendState": {"blendDst": "OneMinusSrcAlphaFactor", "blendSrc": "SrcAlphaFactor", "blendEquation": "AddEquation", "blending": "NoBlending"}, "modified": "2016-02-26T15:46:13.823Z", "dualTransparency": false, "depthState": {"write": true, "enabled": true}, "shaderRef": "GOO_ENGINE_SHADERS/uber", "texturesMapping": {}, "renderQueue": -1}, "2943395549d74ebf85c90f13c7a7f301.entity": {"name": "Default Camera", "license": "CC0", "tags": {}, "deleted": false, "created": "2015-07-27T15:45:29.148Z", "dataModelVersion": 2, "modified": "2015-07-27T15:45:29.148Z", "static": false, "components": {"camera": {"fov": 45, "lockedRatio": false, "far": 1000, "followEditorCam": false, "projectionMode": "Perspective", "near": 1, "aspect": 1, "size": 5}, "transform": {"rotation": [-14.656543521338468, -169.31678302740363, 2.2235631297663896], "scale": [1, 1, 1], "translation": [-44.27737808227539, 156.5982208251953, -380.83740234375]}, "stateMachine": {"machines": {"dfb1d9c49f8e43a99205b9d45a946a39.machine": {"machineRef": "dfb1d9c49f8e43a99205b9d45a946a39.machine", "sortValue": 0}}}, "script": {"scripts": {"83a93026ad294009a907e314e461eed3.scriptinstance": {"id": "83a93026ad294009a907e314e461eed3.scriptinstance", "name": "OrbitNPan", "scriptRef": "GOO_ENGINE_SCRIPTS/OrbitNPanControlScript", "sortValue": 0, "options": {"maxAscent": 89.95, "whenUsed": true, "orbitSpeed": 0.005, "clampAzimuth": false, "maxAzimuth": 270, "minZoomDistance": 1, "enabled": false, "minAzimuth": 90, "minAscent": -89, "lookAtDistance": 1, "drag": 0.9, "dragButton": "Left", "panButton": "Right", "zoomSpeed": 1, "smoothness": 0.4, "maxZoomDistance": 1000}}}}}, "hidden": false, "id": "2943395549d74ebf85c90f13c7a7f301.entity"}, "d4f9afaae5224a28bbebfad34d8513be.scene": {"canvas": {"resolution": {"width": 1920, "height": 1080}, "mode": "Stretch"}, "initialCameraRef": "2943395549d74ebf85c90f13c7a7f301.entity", "description": "", "license": "PRIVATE", "created": "2016-05-16T01:30:23.394593+00:00", "deleted": false, "id": "d4f9afaae5224a28bbebfad34d8513be.scene", "thumbnailRef": "9ce7d991e20821433d551c35728fae33d1eebc13.png", "environmentRef": "2b8ab8943abc4f67afed4f55e19570f8.environment", "dataModelVersion": 2, "originalAsset": {"version": "e39b6ff680c4402a9949b27c96f1729a", "id": "ac9f46781def41a38e654aa43175edba"}, "modified": "2016-10-13T11:34:04.211320+00:00", "entities": {"cb45a8bd40ca4bd1987f63aed638815f.entity": {"entityRef": "cb45a8bd40ca4bd1987f63aed638815f.entity", "sortValue": 8}, "529ec55492064336b1ab4e873c7c7ab4.entity": {"entityRef": "529ec55492064336b1ab4e873c7c7ab4.entity", "sortValue": 6}, "2943395549d74ebf85c90f13c7a7f301.entity": {"entityRef": "2943395549d74ebf85c90f13c7a7f301.entity", "sortValue": 0}, "8f337063abe94bad9a7bdd254d2f9a4c.entity": {"entityRef": "8f337063abe94bad9a7bdd254d2f9a4c.entity", "sortValue": 7}, "a8f5d15046114adf8e058c44a33acd72.entity": {"entityRef": "a8f5d15046114adf8e058c44a33acd72.entity", "sortValue": 3}, "76b826a811344289a6abbfe4d0ac8492.entity": {"entityRef": "76b826a811344289a6abbfe4d0ac8492.entity", "sortValue": 1}}, "defaultPackRef": "8c173dd0b1df4e0386906bd4ae349d0d.pack", "posteffectsRef": "88a70a50fa3e44dbb40f343dfdf46c09.posteffects", "published": "2016-10-13T11:34:02.840953+00:00", "packs": {"3550f2d3bdd34807962219951f2f5423.pack": {"packRef": "3550f2d3bdd34807962219951f2f5423.pack", "sortValue": 5}, "8c173dd0b1df4e0386906bd4ae349d0d.pack": {"packRef": "8c173dd0b1df4e0386906bd4ae349d0d.pack", "sortValue": 0}, "9ead79711577412ba56af65f1d225ac6.pack": {"packRef": "9ead79711577412ba56af65f1d225ac6.pack", "sortValue": 7}, "828e2c5aba4845748c628708b55b69be.pack": {"packRef": "828e2c5aba4845748c628708b55b69be.pack", "sortValue": 8}, "e2e81f717b264da9b74dd912639034ee.pack": {"packRef": "e2e81f717b264da9b74dd912639034ee.pack", "sortValue": 1}}, "editorCameraSettings": {"camera3d": {"spherical": [1000, 0.1422128562178515, 0.38359877559829747], "lookAtPoint": [-44.27737808227539, 156.5982208251953, -380.83740234375]}, "camera2d": {"spherical": [2, 3.141592653589793, 0], "lookAtPoint": [0, 0, 0]}}, "publishedUrl": "https://c1.goote.ch/d4f9afaae5224a28bbebfad34d8513be.scene", "name": "Hyperverse"}, "8f337063abe94bad9a7bdd254d2f9a4c.entity": {"name": "Sphere", "license": "CC0", "tags": {}, "deleted": false, "created": "2016-02-26T15:46:13.823Z", "dataModelVersion": 2, "modified": "2016-02-26T15:46:13.823Z", "static": false, "components": {"meshData": {"shape": "Sphere", "shapeOptions": {"radialSamples": 32, "textureMode": "Projected", "radius": 0.5, "zSamples": 24}}, "transform": {"rotation": [-90, 0, 0], "scale": [100, 100, 100], "translation": [0, 0, 0]}, "meshRenderer": {"receiveShadows": true, "materials": {"d48a82754d7b4a7982bdb8355a5c4a2d.material": {"materialRef": "d48a82754d7b4a7982bdb8355a5c4a2d.material", "sortValue": 0}}, "reflectable": true, "cullMode": "Dynamic", "castShadows": true}, "script": {"scripts": {}}}, "hidden": true, "id": "8f337063abe94bad9a7bdd254d2f9a4c.entity"}, "a8f5d15046114adf8e058c44a33acd72.entity": {"name": "Box", "license": "CC0", "tags": {}, "deleted": false, "created": "2016-02-22T14:26:02.843Z", "dataModelVersion": 2, "modified": "2016-02-22T14:26:02.843Z", "static": false, "components": {"meshData": {"shape": "Box", "shapeOptions": {"textureMode": "Unfolded"}}, "transform": {"rotation": [0, 0, 0], "scale": [1, 1, 1], "translation": [0, 0, 0]}, "meshRenderer": {"receiveShadows": true, "materials": {"0e9ce4f182374610a5847d0489305c62.material": {"materialRef": "0e9ce4f182374610a5847d0489305c62.material", "sortValue": 0}}, "reflectable": true, "cullMode": "Dynamic", "castShadows": true}, "script": {"scripts": {}}}, "hidden": true, "id": "a8f5d15046114adf8e058c44a33acd72.entity"}, "88a70a50fa3e44dbb40f343dfdf46c09.posteffects": {"name": "Post effects", "license": "CC0", "created": "2015-07-27T15:45:29.145Z", "deleted": false, "dataModelVersion": 2, "posteffects": {}, "modified": "2015-07-27T15:45:29.145Z", "id": "88a70a50fa3e44dbb40f343dfdf46c09.posteffects"}, "2b8ab8943abc4f67afed4f55e19570f8.environment": {"sound": {"dopplerFactor": 0, "muted": false, "volume": 1, "rolloffFactor": 0.4, "reverb": 0, "maxDistance": 100}, "globalAmbient": [0, 0, 0, 0], "license": "CC0", "created": "2015-07-27T15:45:29.143Z", "deleted": false, "dataModelVersion": 2, "modified": "2015-07-27T15:45:29.143Z", "fog": {"color": [0.09520000000000008, 0, 0.33999999999999997], "far": 996, "near": 0, "enabled": true}, "backgroundColor": [0, 0, 0, 1], "weather": {"snow": {"velocity": 10, "rate": 10, "enabled": false, "height": 25}}, "id": "2b8ab8943abc4f67afed4f55e19570f8.environment", "name": "Default Environment"}, "76b826a811344289a6abbfe4d0ac8492.entity": {"name": "Default Lights", "license": "CC0", "tags": {}, "deleted": false, "created": "2015-07-27T15:45:29.194Z", "dataModelVersion": 2, "modified": "2015-07-27T15:45:29.194Z", "static": false, "components": {"transform": {"rotation": [0, 0, 0], "scale": [1, 1, 1], "translation": [0, 0, 0], "children": {"b9938525d3534a3e8801dd2a3fd90816.entity": {"entityRef": "b9938525d3534a3e8801dd2a3fd90816.entity", "sortValue": 1}, "debe044cef1c40ed95b13d8ce350b223.entity": {"entityRef": "debe044cef1c40ed95b13d8ce350b223.entity", "sortValue": 0}}}}, "hidden": true, "id": "76b826a811344289a6abbfe4d0ac8492.entity"}, "debe044cef1c40ed95b13d8ce350b223.entity": {"name": "Directional 0", "license": "CC0", "tags": {}, "deleted": false, "created": "2015-07-27T15:45:29.196Z", "dataModelVersion": 2, "modified": "2015-07-27T15:45:29.196Z", "static": false, "components": {"light": {"direction": [0, 0, 0], "shadowCaster": false, "color": [1, 1, 1, 1], "intensity": 0.8, "range": 60, "specularIntensity": 1, "penumbra": 5, "angle": 30, "type": "DirectionalLight", "shadowSettings": {"fov": 55, "darkness": 1, "far": 60, "near": 1, "resolution": [256, 256], "shadowType": "Basic", "size": 100}}, "transform": {"rotation": [-38, 21, -18], "scale": [1, 1, 1], "translation": [16, 20.5, 23.3]}}, "hidden": false, "id": "debe044cef1c40ed95b13d8ce350b223.entity"}, "e9705659628b41e397825ef18a78e5eb.script": {"body": "var addBarycentric = function (entity) {\n\tentity.meshDataComponent.meshData = entity.meshDataComponent.meshData.buildFlatMeshData();\n\tvar meshData = entity.meshDataComponent.meshData;\n\n\tmeshData.attributeMap.BARYCENTRIC = goo.MeshData.createAttribute(3, 'Float');\n\tmeshData.rebuildData(meshData.vertexCount, 0, true);\n\n\tvar barycentricBuffer = meshData.getAttributeBuffer('BARYCENTRIC');\n\tvar vertexCount = meshData.vertexCount;\n\tfor (var a = 0; a < vertexCount; a += 3) {\n\t\tbarycentricBuffer[a * 3 + 0] = 1;\n\t\tbarycentricBuffer[a * 3 + 1] = 0;\n\t\tbarycentricBuffer[a * 3 + 2] = 0;\n\t\tbarycentricBuffer[a * 3 + 3] = 0;\n\t\tbarycentricBuffer[a * 3 + 4] = 1;\n\t\tbarycentricBuffer[a * 3 + 5] = 0;\n\t\tbarycentricBuffer[a * 3 + 6] = 0;\n\t\tbarycentricBuffer[a * 3 + 7] = 0;\n\t\tbarycentricBuffer[a * 3 + 8] = 1;\n\t}\n};\n\nvar parameters = [\n\t{key:'texture', type:'texture', default:null},\n \t{ key: 'lineWidth', type: 'float', default: 1 },\n    { key: 'baseColor', type: 'vec3', control: 'color', default: [0, 0, 0] },\n    { key: 'lineColor', type: 'vec3', control: 'color', default: [1, 1, 1] },\n    { key: 'transparency', type: 'boolean', default: false }\t\n];\n\t\nvar setup = function(args, ctx, goo){\n\t\n\tvar material = new goo.Material('WireShader', wireShaderDef);\n\tmaterial.uniforms.lineWidth = args.lineWidth;\n\tmaterial.uniforms.baseColor = args.baseColor;\n\tmaterial.uniforms.lineColor = args.lineColor;\n\tmaterial.uniforms.transparency = args.transparency;\n//\tmaterial.blendState.blending = 'AdditiveBlending';\n\tif (args.transparency) {\n\t\tmaterial.blendState.blending = 'TransparencyBlending';\n\t\tmaterial.renderQueue = goo.RenderQueue.TRANSPARENT;\n\t}\n\n\t\tvar image = args.texture.image;\n\t\tvar imgCanvas = document.createElement('canvas');\n\t\timgCanvas.width = image.width;\n\t\timgCanvas.height = image.height;\n\t\timgCanvas.getContext('2d').drawImage(image, 0, 0, image.width, image.height);\n\t\t\n\t\tfunction getHeightMap(canvas, scale) {\n\t\t\tvar matrix = [];\n\t\t\tfor (var y = 0, ylen = canvas.height; y < ylen; y++) {\n\t\t\t\tmatrix.push([]);\n\t\t\t\tfor (var x = 0, xlen = canvas.width; x < xlen; x++) {\n\t\t\t\t\tvar rgb = canvas.getContext('2d').getImageData(x, y, 1, 1).data;\n\t\t\t\t\tvar value = rgb[0]+rgb[1]+rgb[2] / 3;\n\t\t\t\t\tmatrix[y].push(value * scale);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn matrix;\n\t\t}\n\t\t\n\t\n\t\t\n\t\tvar heightMap = getHeightMap(imgCanvas, 0.06);\n\t\tvar meshData = goo.Surface.createFromHeightMap(heightMap, 5, 5, 5);\n// \t\tvar material = new goo.Material(goo.ShaderLib.simpleLit);\n\t\n\t\tmaterial.cullState.enabled = false;\n\t\t\n\t\tctx.worldData.heightMap = ctx.world.createEntity(meshData, material).addToWorld();\n// \t\tctx.worldData.heightMap.transformComponent.setTranslation(-750,-20,-730);\n\t\tctx.worldData.heightMap.transformComponent.setTranslation(-375,-10,-375);\n\t\tctx.worldData.heightMap.transformComponent.setUpdated();\n\t\taddBarycentric(ctx.worldData.heightMap);\n// \t\tconsole.log(ctx.heightMap);\n\n};\n\nvar cleanup = function(args, ctx, goo){\n\tif(ctx.worldData.heightMap !== undefined){\n\t\tctx.worldData.heightMap.removeFromWorld();\n\t}\n};\n\n\nvar wireShaderDef = {\n\tprocessors: [\n\t\tgoo.ShaderBuilder.animation.processor\n\t],\n\tdefines: {\n\t\tSHADOW_TYPE: 0,\n\t\tFOG:true,\n\t\tWEIGHTS: true,\n\t\tJOINTIDS: true\n\t},\n\tattributes: {\n\t\tvertexPosition: goo.MeshData.POSITION,\n\t\tvertexNormal: goo.MeshData.NORMAL,\n\t\tvertexUV0: goo.MeshData.TEXCOORD0,\n\t\tvertexColors: goo.MeshData.COLOR,\n\t\tvertexJointIDs: goo.MeshData.JOINTIDS,\n\t\tvertexWeights: goo.MeshData.WEIGHTS,\n\t\tbarycentric: 'BARYCENTRIC'\n\t},\n\tuniforms: {\n\t\tviewProjectionMatrix: goo.Shader.VIEW_PROJECTION_MATRIX,\n\t\tworldMatrix: goo.Shader.WORLD_MATRIX,\n\t\tdiffuseMap: goo.Shader.DIFFUSE_MAP,\n\t\tcameraPosition: goo.Shader.CAMERA,\n\t\tnormalMatrix: goo.Shader.NORMAL_MATRIX,\n\t\tlineWidth: 1,\n\t\tbaseColor: [0.0, 0.0, 0.0],\n\t\tlineColor: [1.0, 1.0, 1.0],\n\t\ttransparency: false,\n\t\tfogSettings: function() {return goo.ShaderBuilder.FOG_SETTINGS;},\n\t\tfogColor: goo.ShaderBuilder.FOG_COLOR,\n\t\tu_time : function() {return goo.World.time;}\n\t},\n\tvshader: [\n\t\t'attribute vec3 vertexPosition;',\n\t\t'attribute vec3 vertexColors;',\n\t\t'attribute vec2 vertexUV0;',\n\t\t\"attribute vec3 vertexNormal;\",\n\t\t'attribute vec3 barycentric;',\n\n\t\t'uniform mat4 viewProjectionMatrix;',\n\t\t'uniform mat4 worldMatrix;',\n\t\t'uniform mat3 normalMatrix;',\n\t\t\"uniform vec3 cameraPosition;\",\n\t\t\"uniform float u_time;\",\n\t\t\t\t\n\t\t\"varying vec3 viewPosition;\",\n\t\t'varying vec2 texCoord0;',\n\t\t'varying vec3 color;',\n\t\t'varying vec3 vBC;',\n\t\t\"varying vec3 normal;\",\n\t\t\"varying vec4 worldPos;\",\n\t\t\n\t\t'#ifdef FOG',\n\t\t\t'uniform vec2 fogSettings;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t'#endif',\n\n\t\tgoo.ShaderBuilder.animation.prevertex,\n\n\t\t'void main(void) {',\n\t\t\t'color = vertexColors;',\n\t\t\t'mat4 wMatrix = worldMatrix;',\n\t\t\tgoo.ShaderBuilder.animation.vertex,\n\t\t\t'texCoord0 = vertexUV0;',\n\t\t\t'vBC = barycentric;',\n\t\t\t\"worldPos = worldMatrix * vec4(vertexPosition, 1.0);\",\n\t\t\t'gl_Position = viewProjectionMatrix * worldPos;',\n\t\t\t\"viewPosition = cameraPosition - worldPos.xyz;\",\n\t\t\t\"normal = (worldMatrix * vec4(vertexNormal, 0.0)).xyz;\",\n\t\t'}'\n\t].join('\\n'),\n\tfshader: [\n\t\t'uniform sampler2D diffuseMap;',\n\t\t'uniform float lineWidth;',\n\t\t'uniform vec3 baseColor;',\n\t\t'uniform vec3 lineColor;',\n\t\t'uniform bool transparency;',\n\t\t'uniform mat3 normalMatrix;',\n\t\t\"uniform float u_time;\",\n\n\t\t'varying vec2 texCoord0;',\n\t\t'varying vec3 vBC;',\n\t\t'varying vec3 color;',\n\t\t\"varying vec3 viewPosition;\",\n\t\t\"varying vec3 normal;\",\n\t\t\"varying vec4 worldPos;\",\n\t\t\n\t\t'#ifdef FOG',\n\t\t\t'uniform vec2 fogSettings;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t '#endif',\n\n\t\t'#extension GL_OES_standard_derivatives : enable',\n\n\t\t'float edgeFactor() {',\n\t\t\t'vec3 d = fwidth(vBC);',\n\t\t\t'vec3 a3 = smoothstep(vec3(0.0), d * lineWidth, vBC);',\n\t\t\t'return 1.0 - min(min(a3.x, a3.y), a3.z);',\n\t\t'}',\n\n\t\t'void main(void) {',\n\t\t\t'float edge = edgeFactor();',\n// \t\t\t'vec3 lines = lineColor*color;',\n// \t\t\t'vec3 fill = baseColor*color;',\n\t\t\t'vec3 dark = vec3(0.0,0.0,0.0);',\n\t/*\t\t\n\t\t\t'float bValue = 0.0;',\n\t\t\t'float Radius = 10.0;',\n\n\t\t\t'float distanceCalculation = distance(viewPosition*(0.0-(Radius/10000.0)), worldPos.xyz*(0.0-(Radius/10000.0)));',\n\t\t\t'vec3 eyeNormal = (normalMatrix*normal)* 0.5 + 0.5;',\n\t\t\t'float cFresnel = clamp(dot(viewPosition, eyeNormal),0.0,1.0);',\n\t\t\t'vec3 invertFresnel = vec3(1, 1, 1) - vec3(cFresnel, cFresnel, cFresnel);',\n\t\t\t'float scanSync = clamp((mix(cFresnel, bValue, distanceCalculation)),0.0,1.0);',\n\t\t\t'float manualScan = clamp((((distance(viewPosition, worldPos.xyz))-100000.0)/10000.0),0.0,1.0);',\n\t\t\n\t*/\t\n\t\t/*\n\t\t\t'if (transparency) {',\n\t\t\t\t'gl_FragColor = vec4(lines, edge);',\n\t\t\t'} else {',\n\t\t\t\t'gl_FragColor.rgb = mix(fill, lines, edge);',\n\t\t\t\t'gl_FragColor.a = 1.0;',\n\t\t\t'}',\n\t\t*/\n\t\t'vec3 mainColor = mix(baseColor, lineColor*1.5, edge);',\n\t\t'vec3 linesOnly = mix(dark, lineColor*1.5, edge);',\n\t\t\n//    \t\t'float dist1 = pow(smoothstep(fogSettings.x, fogSettings.y, tan(length(viewPosition))), 1.0);',\n//\t\t\t'float dist2 = pow(smoothstep(fogSettings.x, fogSettings.y, tan(length(viewPosition))), 0.2);',\n//\t\t\t'float dist3 = pow(smoothstep(0.0, 100.0, tan(length(viewPosition*clamp(cos(u_time*0.1)*0.2, 0.0,1.0)))*0.7), 0.2);',\n\t\t\t'float dist3 = pow(smoothstep(0.0, 50.0, tan(length(viewPosition)*0.004-fract(u_time*0.01)*100.0)), 0.6);',\n\t\t\t'vec3 fog1 = mix(dark, mainColor, dist3);',\n\t\t\t'vec3 fog2 = mix(dark, fogColor,  dist3);',\n      \t\t'gl_FragColor.rgb = fog1+fog2/3.0;',\n// \t\t\t'gl_FragColor.rgb = mainColor;',\n\t\t\t\n// \t\t\t'if (transparency) {',\n//                 'gl_FragColor = vec4(lineColor, edge);',\n//             '} else {',\n// // \t\t\t\t'vec3 line = mix(lineColor, fogColor, worldPos.y);',\n//                 'gl_FragColor.rgb = mix(baseColor, lineColor, edge);',\n// \t\t\t'}',\n\t\t\t'gl_FragColor.a = 1.0;',\n//\t\t\t'gl_FragColor.rgb = fog1;',\n\n\t\t'}'\n\t].join('\\n')\n};\n", "name": "height_map", "license": "CC0", "created": "2015-02-03T14:17:11.627030+00:00", "deleted": false, "dataModelVersion": 2, "modified": "2015-02-03T14:17:11.627030+00:00", "dependencies": {"https://code.gooengine.com/latest/lib/geometrypack.js": {"url": "https://code.gooengine.com/latest/lib/geometrypack.js", "sortValue": 0}}, "id": "e9705659628b41e397825ef18a78e5eb.script"}}